

include $(TOPDIR)/config.mk
#$(warning $(PLATFORM_CPPFLAGS))
ifdef SOC
LDSCRIPT= $(TOPDIR)/firmware/$(ARCH)/$(CPU)/$(SOC)/u-boot.lds
T=$(TOPDIR)/firmware/$(ARCH)/$(CPU)/$(SOC)/Makefile
else
LDSCRIPT= $(TOPDIR)/firmware/$(ARCH)/$(CPU)/u-boot.lds
T=$(TOPDIR)/firmware/$(ARCH)/$(CPU)/Makefile
endif
PLATFORM_CPPFLAGS+=-DCONFIG_AMLROM_SPL

LDFLAGS	= -Bstatic -T $(obj)ddr_init.lds  $(PLATFORM_LDFLAGS)


CFLAGS	:=$(CFLAGS:-marm=-mthumb)
CFLAGS	:=$(CFLAGS:-fPIC=)
CFLAGS	:=$(CFLAGS:-ffixed-r8=)
CFLAGS	+=  -DCONFIG_AML_ROMBOOT_SPL  -MD -Wno-unused-function -mno-long-calls
AFLAGS	+= -DCONFIG_AMLROM_SPL -DTEXT_BASE=$(TEXT_BASE) -MD

ifndef CONFIG_M6_SECU_BOOT
SOBJS	 = ddr_init_start.o magic.o acs_entry.o
else
SOBJS	 = ddr_init_start.o
endif

COBJS	 = ddr_init_main.o

OBJS	:= $(addprefix $(obj),$(SOBJS)  )
__OBJS	:= $(SOBJS) $(COBJS)

ifdef CONFIG_SUPPORT_CUSOTMER_BOARD
VPATH_LIST=	$(TOPDIR)/customer/board/$(BOARD) \
						$(SRCTREE)/$(CPUDIR)/$(SOC) \
						$(SRCTREE)/$(CPUDIR)/common	\
						$(SRCTREE)/$(CPUDIR)  			\
						$(SRCTREE)/common
else
VPATH_LIST=	$(TOPDIR)/board/$(BOARDDIR) \
						$(SRCTREE)/$(CPUDIR)/$(SOC) \
						$(SRCTREE)/$(CPUDIR)/common	\
						$(SRCTREE)/$(CPUDIR)  			\
						$(SRCTREE)/common
endif

VPATH_LIST:=$(VPATH_LIST:%=%/firmware)
CFLAGS+=$(VPATH_LIST:%=-I%)
vpath %.c $(VPATH_LIST)
vpath %.S $(VPATH_LIST)
vpath %.s $(VPATH_LIST)
origin_LDS=$(abspath ddr_init.lds)
target_LDS=$(abspath $(obj)ddr_init.lds)
ifeq ( $(origin_LDS),$(target_LDS))
	target_LDS=$(OBJTREE)/ddr_init.lds
endif

ALL	= $(dir $(FIRMWARE))ddr_init.bin $(dir $(FIRMWARE))ddr_init.out
ELFFILES = $(dir $(FIRMWARE))ddr_init.out

all: $(ALL) $(ELFFILES)

%.bin:	%.out
	$(OBJCOPY) ${OBJCFLAGS} -O binary $< $@
$(dir $(FIRMWARE))ddr_init.out:$(OBJS) $(obj)ddr_init_main.o $(obj)ddr_init.lds

%.out:

	$(LD) $(LDFLAGS) $(filter %.o,$^) $(UCL_BOOTLIBS) $(PLATFORM_LIBS)\
		-Map $(@:%=%.map) --cref \
		-o $@
$(target_LDS):$(origin_LDS)
	$(CPP) $(CPPFLAGS)   $(LDPPFLAGS) -std=c99 -D__ASSEMBLY__ -P - <$^ >$@

sinclude $(wildcard $(obj)*.d)



#########################################################################
